@model PROCAS2.Models.ViewModels.HistologyFocusViewModel

@using PROCAS2.Resources
@{
    ViewBag.Title = "Focus";
}

<script src="~/js/histologyFocusEdit.js" type="text/javascript"></script>

<div class="row">
    <div class="col-md-10">
        <h4>@HistologyResources.FOCUS </h4>

    </div>

    <div class="col-md-2">
        @using (Ajax.BeginForm("DeleteFocus", "Histology", new { focusId = Model.Id }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onDeleteSuccess" }, new { id = "frmDelete" }))
        {
            @Html.AntiForgeryToken()
            <button type="button" id="btnDelete" class="btn btn-danger pull-right">
                @HistologyResources.DELETE
            </button>

        }

    </div>

</div>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.HistologyId)
        @Html.HiddenFor(model => model.PrimaryNumber)
        @Html.HiddenFor(model => model.NHSNumber)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FocusNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FocusNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FocusNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PathologyId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.PathologyId, new SelectList(Model.Pathologies, "Id", "LookupDescription"), new { @class = "form-control" })



                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvasiveId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.InvasiveId, new SelectList(Model.Invasives, "Id", "LookupDescription"), new { @class = "form-control" })



                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvasiveTumourSize, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.InvasiveTumourSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvasiveTumourSize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WholeTumourSize, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.WholeTumourSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WholeTumourSize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvasiveGrade, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.InvasiveGrade, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InvasiveGrade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DCISGradeId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.DCISGradeId, new SelectList(Model.DCISGrades, "Id", "LookupDescription"), new { @class = "form-control" })


                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.LymphNodesRemoved, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LymphNodesRemoved, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LymphNodesRemoved, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LymphNodesPositive, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LymphNodesPositive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LymphNodesPositive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VascularInvasionId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.VascularInvasionId, new SelectList(Model.VascularInvasions, "Id", "LookupDescription"), new { @class = "form-control" })


                    </div>
                </div>

               

                <div class="form-group">
                    @Html.LabelFor(model => model.ERScore, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ERScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ERScore, "", new { @class = "text-danger" })
                    </div>
                </div>

                

                <div class="form-group">
                    @Html.LabelFor(model => model.PRScore, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PRScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PRScore, "", new { @class = "text-danger" })
                    </div>
                </div>

               

                <div class="form-group">
                    @Html.LabelFor(model => model.HER2ScoreId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.HER2ScoreId, new SelectList(Model.HER2Scores, "Id", "LookupDescription"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TNMStageId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.TNMStageId, new SelectList(Model.TNMStages, "Id", "LookupDescription"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.KISixtySeven, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.KISixtySeven, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.KISixtySeven, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
