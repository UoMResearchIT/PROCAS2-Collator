@model PROCAS2.Models.ViewModels.ScreenV1_5_4DetailsViewModel

@using PROCAS2.Resources

@{
    ViewBag.Title = "Volpara Record";
}

<script src="~/js/volparaResultsView.js" type="text/javascript"></script>

<div class="row">
    <div class="col-md-9">

        <h3>Volpara Results - @Model.NHSNumber</h3>

    </div>

</div>

<div class="row">
    <div class="col-md-12">
        @if (Model.ScreeningRecords.Count == 0)
        {
<span>@ParticipantResources.NO_VOLPARA_RECORDS</span>

        }
        else
        {
        <table id="tblVolpara" class="table nowrap compact">
            <thead>
                <tr>
                    <th>
                        Field Name
                    </th>
                    @for (int index = 0; index < Model.ScreeningRecords.Count; index++)
                    {
                    <th></th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DataDate)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DataDate)
                    </td>   
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].Version)
                    </td>

@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
<td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].Version)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].Detector)
                    </td>

@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].Detector)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].XRaySystem)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].XRaySystem)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ManufacturerModelName)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ManufacturerModelName)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].StudyDate)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].StudyDate)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].AccessionDate)
                    </td>

@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].AccessionDate)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ContentDate)
                    </td>

@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ContentDate)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PatientAge)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PatientAge)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].AccessionNumber)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].AccessionNumber)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].StudyInstanceUID)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].StudyInstanceUID)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].SeriesInstanceUID)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].SeriesInstanceUID)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].InstanceNumber)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].InstanceNumber)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].BreastSide)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].BreastSide)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MammoView)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MammoView)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ChestPosition)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ChestPosition)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ExposureMas)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ExposureMas)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ExposureTimeMs)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ExposureTimeMs)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].TubeVoltageKvp)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].TubeVoltageKvp)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].XRayTubeCurrent)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].XRayTubeCurrent)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DetectorTemperature)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DetectorTemperature)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].TargetMaterial)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].TargetMaterial)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].FilterMaterial)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].FilterMaterial)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].FilterThicknessMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].FilterThicknessMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].HVLMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].HVLMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].CompressionForceN)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].CompressionForceN)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].RecordedBreastThicknessMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].RecordedBreastThicknessMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].BreastVolumeCm3)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].BreastVolumeCm3)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].HintVolumeCm3)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].HintVolumeCm3)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].VolumetricBreastDensity)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].VolumetricBreastDensity)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].CompressionPressureKPa)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].CompressionPressureKPa)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ContactAreasMm2)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ContactAreasMm2)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DenseAreaPercent)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DenseAreaPercent)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].AreaGreaterThan10mmDenseMm2)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].AreaGreaterThan10mmDenseMm2)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ComputedSlantAngle)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ComputedSlantAngle)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ComputerSlantMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ComputerSlantMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ComputedBreastThickness)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ComputedBreastThickness)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PectoralAngleDegrees)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PectoralAngleDegrees)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PositionerPrimaryAngle)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PositionerPrimaryAngle)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DetectorPrimaryAngle)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DetectorPrimaryAngle)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DetectorSecondaryAngle)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DetectorSecondaryAngle)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].EntranceDoseInMgy)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].EntranceDoseInMgy)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].OrganDoseInMgy)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].OrganDoseInMgy)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].GlandularityPercent)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].GlandularityPercent)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].VolparaMeanGlandularDoseInMgy)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].VolparaMeanGlandularDoseInMgy)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].OperatorName)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].OperatorName)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].RequestedProcedure)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].RequestedProcedure)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ReferringPhysicianName)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ReferringPhysicianName)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].VolparaError)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].VolparaError)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].Warning)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].Warning)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].Special)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].Special)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MammoImageType)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MammoImageType)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ImageQualityDiagnostics)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ImageQualityDiagnostics)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleInProfile)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleInProfile)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleAreaInMm2)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleAreaInMm2)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PercentNippleAreaAnteriorToSkinBoundary)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PercentNippleAreaAnteriorToSkinBoundary)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleCenterLocationRelativeToSkinLine)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleCenterLocationRelativeToSkinLine)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleToInferiorPectoralMuscleVerticalLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleToInferiorPectoralMuscleVerticalLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PNLToInferiorPectoralMuscleVerticalLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PNLToInferiorPectoralMuscleVerticalLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MLOPosterierNippleLineLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MLOPosterierNippleLineLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleLineLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleLineLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].InframammaryFoldVisible)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].InframammaryFoldVisible)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].InframammaryFoldAreaInMm2)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].InframammaryFoldAreaInMm2)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].InframammaryFoldDistanceFromPosteriorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].InframammaryFoldDistanceFromPosteriorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].InframammaryFoldDistanceFromSuperiorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].InframammaryFoldDistanceFromSuperiorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].SuperiorPectoralWidthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].SuperiorPectoralWidthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PosteriorPectoralLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PosteriorPectoralLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].PectoralShape)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].PectoralShape)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleDistanceFromSuperiorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleDistanceFromSuperiorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleDistanceFromPosteriorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleDistanceFromPosteriorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].CCPosteriorNippleLineLengthInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].CCPosteriorNippleLineLengthInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleMedialLateralDistanceInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleMedialLateralDistanceInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleMedialLateralAngleInDegrees)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleMedialLateralAngleInDegrees)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].BreastCenterToImageCenterDistanceInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].BreastCenterToImageCenterDistanceInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].NippleDistanceFromMedialEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].NippleDistanceFromMedialEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].BreastEdgeDistanceToPosteriorMedialCornerInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].BreastEdgeDistanceToPosteriorMedialCornerInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].BreastEdgeDistanceToPosteriorLateralCornerInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].BreastEdgeDistanceToPosteriorLateralCornerInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ShoulderDetected)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ShoulderDetected)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].CleavageDetected)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].CleavageDetected)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MeanDenseThicknessInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MeanDenseThicknessInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumDenseThicknessInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumDenseThicknessInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].SDDenseThicknessInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].SDDenseThicknessInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumPercentDensityIn1Cm2Area)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumPercentDensityIn1Cm2Area)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumDenseVolumeIn1Cm2AreaInCm3)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumDenseVolumeIn1Cm2AreaInCm3)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumDensity1Cm2AreaDistanceFromSuperiorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumDensity1Cm2AreaDistanceFromSuperiorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumDensity1Cm2AreaDistanceFromMedialEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumDensity1Cm2AreaDistanceFromMedialEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MaximumDensity1Cm2AreaDistanceFromPosteriorEdgeInMm)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MaximumDensity1Cm2AreaDistanceFromPosteriorEdgeInMm)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DoseCalibrationError)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DoseCalibrationError)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MeasuredHVLInMmAl)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MeasuredHVLInMmAl)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].MeasuredEntranceDoseInMgy)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].MeasuredEntranceDoseInMgy)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DoseCalibrationUsedDateTime)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DoseCalibrationUsedDateTime)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].DoseCalculationBasis)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].DoseCalculationBasis)
                    </td>
}
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.ScreeningRecords[0].ParticipantId)
                    </td>
@for (int index = 0; index < Model.ScreeningRecords.Count; index++)
{
                    <td>
                        @Html.DisplayFor(model => model.ScreeningRecords[index].ParticipantId)
                    </td>
}
                </tr>
            </tbody>
        </table>
        }
 </div>
</div>